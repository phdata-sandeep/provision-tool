#!/usr/bin/env bash
set -eo pipefail

# Get the location of this script
# https://stackoverflow.com/a/246128/11236
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
        exit 1
    fi
else
    JAVACMD=java
    if ! which $JAVACMD >/dev/null 2>&1; then
      echo "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
      exit 1
    fi
fi

if [ -n "$TOOLKIT_JAVA_OPTIONS" ]; then
  export JAVA_TOOL_OPTIONS=$TOOLKIT_JAVA_OPTIONS
fi

export TOOLKIT_PROJECT_HOME=${TOOLKIT_PROJECT_HOME:-"."}

LOG_CONFIG="$TOOLKIT_PROJECT_HOME/log4j2.yaml"
# use the log config in the project directory, otherwise default to the one in the jar
if [ -f "$LOG_CONFIG" ]; then
  LOG_FLAG=-Dlog4j2.configurationFile="$LOG_CONFIG"
fi

RESOURCES_DIR="$TOOLKIT_PROJECT_HOME/resources"
LIB_DIR="$TOOLKIT_PROJECT_HOME/lib/*"
GLOBAL_LIB_DIR="$HOME/.toolkit/lib/*"

case "$(uname -s)" in
    MINGW* | CYGWIN*)
      SCRIPT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd -W )
      CLASSPATH="$RESOURCES_DIR;$SCRIPT_DIR/*;$LIB_DIR;$GLOBAL_LIB_DIR"
      ;;
    *)
      SCRIPT_DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
      CLASSPATH="$RESOURCES_DIR:$SCRIPT_DIR/*:$LIB_DIR:$GLOBAL_LIB_DIR"
      ;;
esac

# Note: We add the --add-opens to workaround a Java 17 issue with Snowflake JDBC.
"$JAVACMD" \
  -cp "$CLASSPATH" \
  --add-opens "java.base/java.nio=ALL-UNNAMED" \
  $LOG_FLAG \
  -Dtoolkit.home="$SCRIPT_DIR" \
  io.phdata.tool.cli.ToolkitCli "$@"
